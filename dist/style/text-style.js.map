{"version":3,"file":"text-style.js","sources":["../../src/style/text-style.ts"],"sourcesContent":["import type { Properties, Property } from 'csstype'\n// import { interceptDirty } from '../common/intercept'\nimport type { Display } from '../object/display'\nimport { createCanvasFontString, formatValue } from '../utils'\nimport type { IBaseStyle } from './base-style'\nimport { BaseStyle } from './base-style'\n\nexport interface TextStyleOptions extends IBaseStyle {\n  /**\n   * @description 字体\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family)\n   */\n  fontFamily: Properties['fontFamily']\n  /**\n   * @description 字体大小 当值为 number 时单位为px\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-size)\n   */\n  fontSize: Properties['fontSize'] | (number & {})\n  /**\n   * @description 字体样式\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-style)\n   */\n  fontStyle: Properties['fontStyle']\n  /**\n   * @description 字体的粗细程度\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-weight)\n   */\n  fontWeight: Properties['fontWeight']\n  /**\n   * 指定绘制文本时字体如何被扩展或压缩\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/fontStretch)\n   */\n  fontStretch: CanvasFontStretch\n  /**\n   * 用于指定渲染文本的替代大写形式\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps)\n   */\n  fontVariantCaps: CanvasFontVariantCaps\n  /**\n   * 用于指定绘制文本时字母之间的间距\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/letterSpacing)\n   */\n  letterSpacing: string | number\n  /**\n   * 指定绘制文本时单词之间的间距\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/wordSpacing)\n   */\n  wordSpacing: string | number\n  /**\n   * 文本时文本的对齐方式\n   * [MDN Reference](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/textAlign)\n   */\n  textAlign: CanvasTextAlign\n\n  lineHeight: number\n  wordWrap: boolean\n  wordWrapWidth: number\n}\n\nexport class TextStyle extends BaseStyle implements TextStyleOptions {\n  public static defaultTextStyle: TextStyleOptions = {\n    fill: 'black',\n    stroke: null,\n    strokeWeight: 0,\n    alpha: 1,\n    fontFamily: 'Arial',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontStretch: 'condensed',\n    fontVariantCaps: 'normal',\n    letterSpacing: 0,\n    wordSpacing: 0,\n    textAlign: 'left',\n    filter: 'none',\n    shadow: {},\n    lineHeight: 0,\n    wordWrap: false,\n    wordWrapWidth: 0,\n  }\n\n  _isStroke: boolean\n  constructor(style: Partial<TextStyleOptions> = {}) {\n    super()\n    this._isStroke = !!style.stroke\n    const fullStyle = Object.assign({}, TextStyle.defaultTextStyle, style)\n    for (const key in fullStyle) {\n      const thisKey = key as keyof typeof this\n      this[thisKey] = fullStyle[key as keyof TextStyleOptions] as any\n    }\n  }\n\n  public reset() {\n    const defaultStyle = TextStyle.defaultTextStyle\n    for (const key in defaultStyle) {\n      this[key as keyof typeof this] = defaultStyle[key as keyof TextStyleOptions] as any\n    }\n    this.updateBounds()\n    this.update()\n  }\n\n  protected readonly textBaseline = 'top'\n\n  private _fontSize: TextStyleOptions['fontSize']\n  set fontSize(value) {\n    this._fontSize = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontSize() {\n    return this._fontSize\n  }\n\n  private _fontFamily: TextStyleOptions['fontFamily']\n  set fontFamily(value) {\n    this._fontFamily = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontFamily() {\n    return this._fontFamily\n  }\n\n  private _fontStyle: TextStyleOptions['fontStyle']\n\n  set fontStyle(value) {\n    this._fontStyle = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontStyle() {\n    return this._fontStyle\n  }\n\n  private _fontWeight: TextStyleOptions['fontWeight']\n\n  set fontWeight(value) {\n    this._fontWeight = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontWeight() {\n    return this._fontWeight\n  }\n\n  private _fontStretch: TextStyleOptions['fontStretch'] = TextStyle.defaultTextStyle.fontStretch\n\n  set fontStretch(value) {\n    this._fontStretch = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontStretch() {\n    return this._fontStretch\n  }\n\n  private _fontVariantCaps: TextStyleOptions['fontVariantCaps'] = TextStyle.defaultTextStyle.fontVariantCaps\n\n  set fontVariantCaps(value) {\n    this._fontVariantCaps = value\n    this.updateBounds()\n    this.update()\n  }\n\n  get fontVariantCaps() {\n    return this._fontVariantCaps\n  }\n\n  private _letterSpacing: TextStyleOptions['letterSpacing'] = TextStyle.defaultTextStyle.letterSpacing\n\n  set letterSpacing(value) {\n    this._letterSpacing = value\n    this.update()\n    this.updateBounds()\n  }\n\n  get letterSpacing() {\n    return this._letterSpacing\n  }\n\n  private _wordSpacing: TextStyleOptions['wordSpacing'] = TextStyle.defaultTextStyle.wordSpacing\n\n  set wordSpacing(value) {\n    this._wordSpacing = value\n    this.update()\n    this.updateBounds()\n  }\n\n  get wordSpacing() {\n    return this._wordSpacing\n  }\n\n  private _textAlign: TextStyleOptions['textAlign'] = TextStyle.defaultTextStyle.textAlign\n\n  set textAlign(value) {\n    this._textAlign = value\n    this.update()\n  }\n\n  get textAlign() {\n    return this._textAlign\n  }\n\n  private _lineHeight = 0\n\n  set lineHeight(value) {\n    if (this.lineHeight !== value) {\n      this._lineHeight = value\n      this.update()\n      this.updateBounds()\n    }\n  }\n\n  get lineHeight() {\n    if (!this._lineHeight) {\n      this._lineHeight = typeof this.fontSize == 'number' ? this.fontSize : Number.parseInt(`${this.fontSize}`)\n    }\n    return this._lineHeight\n  }\n\n  private _wordWrap = false\n\n  set wordWrap(value) {\n    if (this.wordWrap !== value) {\n      this._wordWrap = value\n      this.update()\n      this.updateBounds()\n    }\n  }\n\n  get wordWrap() {\n    return this._wordWrap\n  }\n\n  private _wordWrapWidth = 0\n\n  set wordWrapWidth(value) {\n    if (this.wordWrapWidth !== value) {\n      this._wordWrapWidth = value\n      this.update()\n      this.updateBounds()\n    }\n  }\n\n  get wordWrapWidth() {\n    return this._wordWrapWidth\n  }\n\n  clone() {\n    return new TextStyle({\n      fill: this.fill,\n      stroke: this.stroke,\n      strokeWeight: this.strokeWeight,\n      alpha: this.alpha,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontWeight: this.fontWeight,\n      fontStretch: this.fontStretch,\n      fontVariantCaps: this.fontVariantCaps,\n      letterSpacing: this.letterSpacing,\n      wordSpacing: this.wordSpacing,\n      textAlign: this.textAlign,\n      filter: this.filter,\n    })\n  }\n\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx)\n    ctx.textBaseline = 'top'\n    ctx.font = createCanvasFontString(this)\n    ctx.fontStretch = this.fontStretch\n    ctx.fontVariantCaps = this.fontVariantCaps\n    ctx.letterSpacing = formatValue(this.letterSpacing)\n    ctx.wordSpacing = formatValue(this.wordSpacing)\n    ctx.textAlign = this.textAlign\n    return this\n  }\n};\n"],"names":["TextStyle","BaseStyle","static","fill","stroke","strokeWeight","alpha","fontFamily","fontSize","fontStyle","fontWeight","fontStretch","fontVariantCaps","letterSpacing","wordSpacing","textAlign","filter","shadow","lineHeight","wordWrap","wordWrapWidth","_isStroke","constructor","style","super","this","fullStyle","Object","assign","defaultTextStyle","key","reset","defaultStyle","updateBounds","update","textBaseline","_fontSize","value","_fontFamily","_fontStyle","_fontWeight","_fontStretch","_fontVariantCaps","_letterSpacing","_wordSpacing","_textAlign","_lineHeight","Number","parseInt","_wordWrap","_wordWrapWidth","clone","render","ctx","font","createCanvasFontString","formatValue"],"mappings":"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"}