"use strict";var t=require("../style/text-style.js"),e=require("./display.js");require("../utils.js"),require("../style/base-style.js"),require("../coordinate/ObservablePoint.js");class s extends e.Display{constructor(t){super(t),t.style&&(this.style=t.style),this.text=t.text??""}_style=new t.TextStyle;set style(e){e=e||{},this._style?.off("update",this._onUpdate,this),this._style?.off("updateBounds",this._updateBounds,this),e instanceof t.TextStyle?this._style=e:this._style=new t.TextStyle(e),this._style.on("update",this._onUpdate,this),this._style?.on("updateBounds",this._updateBounds,this),this._onUpdate()}get style(){return this._style}_text="";set text(t){this._text!==t&&(this._text=t,this._onUpdate())}get text(){return this._text}get _shouldUpdate(){return!!this.style.fill||!(!this.style.stroke||!this.style.strokeWeight)}getSplitText(t){const e=this.text.split(""),s=[];let i=[];for(let h=0;h<e.length;h++){const l=e[h];i.push(l);const o=i.join("");t.measureText(o).width>this.style.wordWrapWidth?(i.pop(),s.push(i.join("")),i=[l]):h===e.length-1&&s.push(o)}return s}_render(t){if(this.style.fill||this.style.stroke&&this.style.strokeWeight)if(this.style.render(t),this.style.wordWrap&&this.style.wordWrapWidth){const e=this.getSplitText(t);for(let s=0;s<e.length;s++){const i=e[s];this.style.fill&&t.strokeText(i,this.position.x,this.position.y+s*this.style.lineHeight),this.style.stroke&&this.style.strokeWeight&&t.strokeText(i,this.position.x,this.position.y+s*this.style.lineHeight)}}else this.style.fill&&t.fillText(this.text,this.position.x,this.position.y),this.style.stroke&&this.style.strokeWeight&&t.strokeText(this.text,this.position.x,this.position.y)}_updateBounds(){this._app&&this._app.onContext((t=>{if(this.style.render(t),this.style.wordWrap&&this.style.wordWrapWidth){const e=this.getSplitText(t);if(this.width=this.style.wordWrapWidth,!e.length)return void(this.height=0);const s=t.measureText(this.getSplitText(t)[0]),i=this.style.lineHeight;let h=Math.max(s.actualBoundingBoxDescent-s.actualBoundingBoxAscent,i);this.style.stroke&&this.style.strokeWeight&&(h+=this.style.strokeWeight),e.length>1&&(this.height=(e.length-1)*i+h)}else{const e=t.measureText(this.text);let s=Math.max(e.actualBoundingBoxDescent-e.actualBoundingBoxAscent,"number"==typeof this.style.fontSize?this.style.fontSize:Number.parseInt(`${this.style.fontSize}`));this.style.stroke&&this.style.strokeWeight&&(s+=this.style.strokeWeight),this.height=s}}))}width=0;height=0}exports.Text=s;
//# sourceMappingURL=text.js.map
