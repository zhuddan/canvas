"use strict";var t=require("../style/text-style.js"),s=require("./display.js");require("../utils.js"),require("../style/abstract-style.js"),require("../index-DdxX_nW5.js"),require("../coordinate/ObservablePoint.js");class e extends s.Display{constructor(t){super(t),t.style&&(this.style=t.style),this.text=t.text??"",this.emit("ready"),this._onUpdate()}_style=new t.TextStyle;set style(s){s=s||{},this._style?.off("update",this._onUpdate,this),this._style?.off("updateBounds",this.shouldUpdateBounds,this),s instanceof t.TextStyle?this._style=s:this._style=new t.TextStyle(s),this._style.on("update",this._onUpdate,this),this._style?.on("updateBounds",this.shouldUpdateBounds,this),this._onUpdate()}get style(){return this._style}_text="";set text(t){this._text!==t&&(this._text=t,this._onUpdate())}get text(){return this._text}get _shouldUpdate(){return!!this.style.fill||!(!this.style.stroke.color||!this.style.stroke.width)}getSplitText(t){const s=this.text.split(""),e=[];let i=[];for(let h=0;h<s.length;h++){const o=s[h];i.push(o);const l=i.join("");t.measureText(l).width>this.style.wordWrapWidth?(i.pop(),e.push(i.join("")),i=[o]):h===s.length-1&&e.push(l)}return e}_render(t){if(this.style.fill||this.style.stroke?.color&&this.style.stroke?.width)if(this.style.render(t),this.style.wordWrap&&this.style.wordWrapWidth){const s=this.getSplitText(t);for(let e=0;e<s.length;e++){const i=s[e];this.style.fill&&t.strokeText(i,this.position.x,this.position.y+e*this.style.lineHeight),this.style.stroke?.color&&this.style.stroke?.width&&t.strokeText(i,this.position.x,this.position.y+e*this.style.lineHeight)}}else this.style.fill&&t.fillText(this.text,this.position.x,this.position.y),this.style.stroke?.color&&this.style.stroke?.width&&t.strokeText(this.text,this.position.x,this.position.y)}updateTransformBounds(){this._app&&this._app.onContext((t=>{if(this.style.render(t),this.style.wordWrap&&this.style.wordWrapWidth){const s=this.getSplitText(t);if(this.transformWidth=this.style.wordWrapWidth,!s.length)return void(this.transformHeight=0);const e=t.measureText(this.getSplitText(t)[0]),i=this.style.lineHeight;let h=Math.max(e.actualBoundingBoxDescent-e.actualBoundingBoxAscent,i);this.style.stroke&&this.style.stroke.width&&(h+=this.style.stroke.width),s.length>1&&(this.transformHeight=(s.length-1)*i+h)}else{const s=t.measureText(this.text);this.transformWidth=s.width;let e=Math.max(s.actualBoundingBoxDescent-s.actualBoundingBoxAscent,"number"==typeof this.style.fontSize?this.style.fontSize:Number.parseInt(`${this.style.fontSize}`));this.style.stroke&&this.style.stroke.width&&(e+=this.style.stroke.width),this.transformHeight=e}}))}transformWidth=0;transformHeight=0}exports.Text=e;
//# sourceMappingURL=text.js.map
