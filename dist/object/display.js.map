{"version":3,"file":"display.js","sources":["../../src/object/display.ts"],"sourcesContent":["import type { App } from '../app'\nimport type { Observer } from '../coordinate/ObservablePoint'\nimport { ObservablePoint } from '../coordinate/ObservablePoint'\nimport type { PointData } from '../coordinate/PointData'\nimport { ensureBetween } from '../utils'\n\n/**\n * [单位矩阵变化](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setTransform)\n */\nexport interface DisplayOptions {\n\n  rotation?: number\n\n  scale?: PointData | number\n\n  anchor?: PointData | number\n\n  pivot?: PointData | number\n\n  skew?: PointData\n\n  visible?: boolean\n\n  x?: number\n\n  y?: number\n\n  position?: PointData\n\n  alpha?: number\n}\n\nconst defaultSkew = new ObservablePoint(null)\nconst defaultPivot = new ObservablePoint(null)\nconst defaultAnchor = new ObservablePoint(null)\nconst defaultScale = new ObservablePoint(null, 1, 1)\n\nexport abstract class Display implements Observer<ObservablePoint> {\n  constructor(options: DisplayOptions = {}) {\n    this.visible = !!options.visible\n\n    if (options.position) {\n      this.position = options.position\n    }\n    else {\n      this.x = options.x ?? 0\n      this.y = options.y ?? 0\n    }\n\n    if (options.scale) {\n      this.scale = options.scale\n    }\n\n    if (options.skew) {\n      this.skew = options.skew\n    }\n\n    if (options.pivot) {\n      this.pivot = options.pivot\n    }\n  }\n\n  /**\n   * 更新优化\n   */\n\n  private get __shouldUpdate() {\n    return !(!this.visible\n      || this.scale.x === 0\n      || this.scale.y === 0\n      || this.alpha === 0)\n  }\n  /**\n   * 更新优化\n   * 如果_shouldRender为true 则渲染\n   * 否则跳过渲染\n   */\n  abstract get _shouldUpdate(): boolean\n\n  get shouldUpdate() {\n    return this.__shouldUpdate && this._shouldUpdate\n  }\n\n  protected _dirty = true\n  set dirty(value) {\n    if (this._dirty === value)\n      return\n    this._dirty = value\n  }\n\n  get dirty() {\n    return this._dirty\n  }\n\n  set x(value) {\n    if (this.x !== value) {\n      this.position.x = value\n    }\n  }\n\n  get x() {\n    return this.position.x\n  }\n\n  set y(value) {\n    if (this.y !== value) {\n      this.position.y = value\n    }\n  }\n\n  get y() {\n    return this.position.y\n  }\n\n  private _position = new ObservablePoint(this, 0, 0)\n\n  set position(value: PointData) {\n    if (this.position !== value) {\n      this._position.copyFrom(value)\n    }\n  }\n\n  get position(): ObservablePoint {\n    return this._position\n  }\n\n  private _scale: ObservablePoint = defaultScale\n\n  set scale(value: PointData | number) {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 1, 1)\n    }\n    if (typeof value === 'number') {\n      this._scale.set(value)\n    }\n    else {\n      this._scale.copyFrom(value)\n    }\n  }\n\n  get scale(): ObservablePoint {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 1, 1)\n    }\n    return this._scale\n  }\n\n  private _skew: ObservablePoint = defaultSkew\n\n  set skew(value: PointData) {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this)\n    }\n    this._skew.copyFrom(value)\n  }\n\n  get skew(): ObservablePoint {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this, 0, 0)\n    }\n    return this._skew\n  }\n\n  private _alpha = 1\n\n  set alpha(value) {\n    if (this.alpha !== value) {\n      this._alpha = value\n      this._onUpdate()\n    }\n  }\n\n  get alpha() {\n    return this._alpha\n  }\n\n  private _rotation = 0\n\n  set rotation(value) {\n    if (this.rotation !== value) {\n      this._rotation = value\n      this._onUpdate()\n    }\n  }\n\n  get rotation() {\n    return this._rotation\n  }\n\n  private _anchor = defaultAnchor\n\n  set anchor(value: PointData | number) {\n    if (this._anchor === defaultAnchor) {\n      this._anchor = new ObservablePoint(this, 0, 0)\n    }\n    if (typeof value === 'number') {\n      this._anchor.set(value)\n    }\n    else {\n      this._anchor.copyFrom(value)\n    }\n  }\n\n  get anchor(): ObservablePoint {\n    if (this._anchor === defaultAnchor) {\n      this._anchor = new ObservablePoint(this)\n    }\n    return this._anchor\n  }\n\n  private _pivot: ObservablePoint = defaultPivot\n\n  set pivot(value: PointData | number) {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this, 0, 0)\n    }\n    if (typeof value === 'number') {\n      this._pivot.set(value)\n    }\n    else {\n      this._pivot.copyFrom(value)\n    }\n  }\n\n  get pivot(): ObservablePoint {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this)\n    }\n    return this._pivot\n  }\n\n  _onUpdate(point?: ObservablePoint | undefined) {\n    if (!point) {\n      //\n    }\n    this.dirty = true\n  }\n\n  _app: App | null = null\n  // abstract style: BaseStyle\n\n  private _visible = true\n\n  get visible() {\n    return this._visible\n  }\n\n  private shouldUpdateBounds = true\n  protected needUpdateBounds() {\n    if (!this.shouldUpdateBounds)\n      this.shouldUpdateBounds = true\n  }\n\n  public render(ctx: CanvasRenderingContext2D) {\n    if (this.shouldUpdateBounds) {\n      this._updateBounds()\n      this.shouldUpdateBounds = false\n    }\n    const scaleX = this.scale.x\n    const scaleY = this.scale.y\n    const skewX = this.skew.x\n    const skewY = this.skew.y\n    const positionX = this.position.x\n    const positionY = this.position.y\n    const pivotX = this.pivot.x\n    const pivotY = this.pivot.y\n    const rotation = this.rotation\n    // Calculate rotation matrix components\n    const cos = Math.cos(rotation)\n    const sin = Math.sin(rotation)\n\n    const anchorX = ensureBetween(this.anchor.x, 0, 1)\n    const anchorY = ensureBetween(this.anchor.y, 0, 1)\n\n    // Adjust origin based on anchor\n    const originX = this.width * anchorX\n    const originY = this.height * anchorY\n\n    // Apply pivot translation\n    // const dx = positionX - pivotX * cos * scaleX + pivotY * sin * scaleY\n    // const dy = positionY - pivotX * sin * scaleX - pivotY * cos * scaleY\n\n    const dx = positionX - (pivotX + originX) * cos * scaleX + (pivotY + originY) * sin * scaleY\n    const dy = positionY - (pivotX + originX) * sin * scaleX - (pivotY + originY) * cos * scaleY\n\n    // Set transformation matrix\n    // a = scaleX * cos + skewY * -sin\n    // b = scaleX * sin + skewY * cos\n    // c = skewX * cos + scaleY * -sin\n    // d = skewX * sin + scaleY * cos\n    // e = dx\n    // f = dy\n\n    const dpr = this._app?.dpr ?? 1\n    ctx.setTransform(\n      scaleX * cos + skewY * -sin, // a\n      scaleX * sin + skewY * cos, // b\n      skewX * cos + scaleY * -sin, // c\n      skewX * sin + scaleY * cos, // d\n      dx * dpr, // e\n      dy * dpr, // f\n    )\n    const _position = this.position.clone()\n    ctx.scale(dpr, dpr)\n    this.position.set(0)\n    this._render(ctx)\n    this.position = _position\n    ctx.resetTransform()\n  }\n\n  protected abstract _render(ctx: CanvasRenderingContext2D): void\n\n  set visible(value) {\n    this._visible = value\n  }\n\n  abstract width: number\n  abstract height: number\n  abstract _updateBounds(): void\n\n  onAdd() { }\n\n  onRemove() { }\n}\n"],"names":["defaultSkew","ObservablePoint","defaultPivot","defaultAnchor","defaultScale","constructor","options","this","visible","position","x","y","scale","skew","pivot","__shouldUpdate","alpha","shouldUpdate","_shouldUpdate","_dirty","dirty","value","_position","copyFrom","_scale","set","_skew","_alpha","_onUpdate","_rotation","rotation","_anchor","anchor","_pivot","point","_app","_visible","shouldUpdateBounds","needUpdateBounds","render","ctx","_updateBounds","scaleX","scaleY","skewX","skewY","positionX","positionY","pivotX","pivotY","cos","Math","sin","anchorX","ensureBetween","anchorY","originX","width","originY","height","dx","dy","dpr","setTransform","clone","_render","resetTransform","onAdd","onRemove"],"mappings":"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"}