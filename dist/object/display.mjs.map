{"version":3,"file":"display.mjs","sources":["../../src/object/display.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3'\nimport type { App } from '../app'\nimport type { Observer } from '../coordinate/ObservablePoint'\nimport { ObservablePoint } from '../coordinate/ObservablePoint'\nimport type { PointData } from '../coordinate/PointData'\nimport { createProxy, ensureBetween } from '../utils'\n\ninterface ShadowType {\n  /**\n   * [CanvasRenderingContext2D.shadowOffsetX](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX)\n   */\n  x?: number\n  /**\n   * [CanvasRenderingContext2D.shadowOffsetY](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY)\n   */\n  y?: number\n  /**\n   * [CanvasRenderingContext2D.shadowBlur](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowBlur)\n   */\n  blur?: number\n  /**\n   * [CanvasRenderingContext2D.shadowColor](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowColor)\n   */\n  color?: string\n}\n/**\n * [单位矩阵变化](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setTransform)\n */\nexport interface DisplayOptions {\n  visible?: boolean\n\n  x?: number\n\n  y?: number\n\n  position?: PointData\n\n  rotation?: number\n\n  scale?: PointData | number\n\n  anchor?: PointData | number\n\n  pivot?: PointData | number\n\n  skew?: PointData\n\n  alpha?: number\n  // 特殊样式\n  shadow?: ShadowType\n}\n\nconst defaultSkew = new ObservablePoint(null)\nconst defaultPivot = new ObservablePoint(null)\nconst defaultAnchor = new ObservablePoint(null)\nconst defaultScale = new ObservablePoint(null, 1, 1)\n\nexport abstract class Display extends EventEmitter<{\n  ready: []\n}> implements Observer<ObservablePoint> {\n  constructor(options: DisplayOptions = {}) {\n    super()\n    this.visible = options.visible ?? true\n    if (options.position) {\n      this.position = options.position\n    }\n    else {\n      this.x = options.x ?? 0\n      this.y = options.y ?? 0\n    }\n\n    if (options.scale) {\n      this.scale = options.scale\n    }\n\n    if (options.skew) {\n      this.skew = options.skew\n    }\n    if (options.pivot) {\n      this.pivot = options.pivot\n    }\n    if (options.shadow) {\n      this.shadow = options.shadow\n    }\n    if (options.anchor) {\n      this.anchor = options.anchor\n    }\n    if (options.rotation) {\n      this.rotation = options.rotation\n    }\n  }\n\n  /**\n   * 更新优化\n   */\n\n  private get __shouldUpdate() {\n    return !(!this.visible\n      || this.scale.x === 0\n      || this.scale.y === 0\n      || this.alpha === 0)\n  }\n  /**\n   * 更新优化\n   * 如果_shouldRender为true 则渲染\n   * 否则跳过渲染\n   */\n  abstract get _shouldUpdate(): boolean\n\n  get shouldUpdate() {\n    return this.__shouldUpdate && this._shouldUpdate\n  }\n\n  protected _dirty = false\n  set dirty(value) {\n    if (this._dirty === value)\n      return\n    this._dirty = value\n  }\n\n  get dirty() {\n    return this._dirty\n  }\n\n  set x(value) {\n    if (this.x !== value) {\n      this.position.x = value\n    }\n  }\n\n  get x() {\n    return this.position.x\n  }\n\n  set y(value) {\n    if (this.y !== value) {\n      this.position.y = value\n    }\n  }\n\n  get y() {\n    return this.position.y\n  }\n\n  private _position = new ObservablePoint(this, 0, 0)\n\n  set position(value: PointData) {\n    if (this.position !== value) {\n      this._position.copyFrom(value)\n    }\n  }\n\n  get position(): ObservablePoint {\n    return this._position\n  }\n\n  private _scale: ObservablePoint = defaultScale\n\n  set scale(value: PointData | number) {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 1, 1)\n    }\n    if (typeof value === 'number') {\n      this._scale.set(value)\n    }\n    else {\n      this._scale.copyFrom(value)\n    }\n  }\n\n  get scale(): ObservablePoint {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 1, 1)\n    }\n    return this._scale\n  }\n\n  private _skew: ObservablePoint = defaultSkew\n\n  set skew(value: PointData) {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this)\n    }\n    this._skew.copyFrom(value)\n  }\n\n  get skew(): ObservablePoint {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this, 0, 0)\n    }\n    return this._skew\n  }\n\n  private _alpha = 1\n\n  set alpha(value) {\n    if (this.alpha !== value) {\n      this._alpha = value\n      this._onUpdate()\n    }\n  }\n\n  get alpha() {\n    return this._alpha\n  }\n\n  private _rotation = 0\n\n  set rotation(value) {\n    if (this.rotation !== value) {\n      this._rotation = value\n      this._onUpdate()\n    }\n  }\n\n  get rotation() {\n    return this._rotation\n  }\n\n  private _anchor = defaultAnchor\n\n  set anchor(value: PointData | number) {\n    if (this._anchor === defaultAnchor) {\n      this._anchor = new ObservablePoint(this, 0, 0)\n    }\n    if (typeof value === 'number') {\n      this._anchor.set(value)\n    }\n    else {\n      this._anchor.copyFrom(value)\n    }\n  }\n\n  get anchor(): ObservablePoint {\n    if (this._anchor === defaultAnchor) {\n      this._anchor = new ObservablePoint(this)\n    }\n    return this._anchor\n  }\n\n  private _pivot: ObservablePoint = defaultPivot\n\n  set pivot(value: PointData | number) {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this, 0, 0)\n    }\n    if (typeof value === 'number') {\n      this._pivot.set(value)\n    }\n    else {\n      this._pivot.copyFrom(value)\n    }\n  }\n\n  get pivot(): ObservablePoint {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this)\n    }\n    return this._pivot\n  }\n\n  private _shadow: ShadowType = { x: 0, y: 0 }\n\n  set shadow(value) {\n    if (value === this._shadow)\n      return\n    if (value) {\n      this._shadow = createProxy(value, () => {\n        this._onUpdate()\n      })\n      this._onUpdate()\n    }\n  }\n\n  get shadow(): ShadowType {\n    return this._shadow\n  }\n\n  _onUpdate(_point?: ObservablePoint | undefined) {\n    this.dirty = true\n  }\n\n  _app: App | null = null\n  // abstract style: BaseStyle\n\n  private _visible = true\n\n  get visible() {\n    return this._visible\n  }\n\n  set visible(value) {\n    this._visible = value\n    this._onUpdate()\n  }\n\n  protected _shouldUpdateBounds = true\n\n  protected shouldUpdateBounds() {\n    this._shouldUpdateBounds = true\n  }\n\n  private _baseRender(ctx: CanvasRenderingContext2D) {\n    if ((this.shadow?.x || this.shadow?.y)\n      && (this.shadow?.blur || this.shadow?.color)) {\n      if (this.shadow.color) {\n        ctx.shadowColor = this.shadow.color\n      }\n      if (this.shadow.blur) {\n        ctx.shadowBlur = this.shadow.blur\n      }\n      if (this.shadow.x) {\n        ctx.shadowOffsetX = this.shadow.x\n      }\n      if (this.shadow.y) {\n        ctx.shadowOffsetY = this.shadow.y\n      }\n    }\n  }\n\n  public render(ctx: CanvasRenderingContext2D) {\n    if (this._shouldUpdateBounds) {\n      this.updateTransformBounds()\n      this._shouldUpdateBounds = false\n    }\n    if (this.alpha !== 1) {\n      ctx.globalAlpha = this.alpha\n    }\n    const dpr = this._app?.dpr ?? 1\n    const scaleX = this.scale.x * dpr\n    const scaleY = this.scale.y * dpr\n    const skewX = this.skew.x\n    const skewY = this.skew.y\n    const positionX = this.position.x * dpr\n    const positionY = this.position.y * dpr\n    const pivotX = this.pivot.x\n    const pivotY = this.pivot.y\n    const rotation = this.rotation\n    // Calculate rotation matrix components\n    const cos = Math.cos(rotation)\n    const sin = Math.sin(rotation)\n\n    const anchorX = ensureBetween(this.anchor.x, 0, 1)\n    const anchorY = ensureBetween(this.anchor.y, 0, 1)\n\n    const originX = this.transformWidth * anchorX\n    const originY = this.transformHeight * anchorY\n\n    const dx = positionX - (pivotX + originX) * cos * scaleX + (pivotY + originY) * sin * scaleY\n    const dy = positionY - (pivotX + originX) * sin * scaleX - (pivotY + originY) * cos * scaleY\n\n    ctx.setTransform(\n      scaleX * cos + skewY * -sin, // a\n      scaleX * sin + skewY * cos, // b\n      skewX * cos + scaleY * -sin, // c\n      skewX * sin + scaleY * cos, // d\n      dx, // e\n      dy, // f\n    )\n    const _position = this.position.clone()\n    this.position.set(0)\n    this._baseRender(ctx)\n    this._render(ctx)\n    this.position = _position\n    ctx.resetTransform()\n  }\n\n  _renderId = 0\n  protected abstract _render(ctx: CanvasRenderingContext2D): void\n\n  /**\n   * 同于形变转换的宽度\n   */\n  abstract transformWidth: number\n  /**\n   * 同于形变转换的高度\n   */\n  abstract transformHeight: number\n\n  /**\n   * 同于形变转换的边界\n   */\n  abstract updateTransformBounds(): void\n\n  onAdd(_app: App) {\n    this._app = _app\n    this._onUpdate()\n  }\n\n  onRemove() {\n    this._app = null\n    this._onUpdate()\n  }\n\n  destroy() {\n    this.removeAllListeners()\n  }\n}\n"],"names":["defaultSkew","ObservablePoint","defaultPivot","defaultAnchor","defaultScale","Display","EventEmitter","constructor","options","super","this","visible","position","x","y","scale","skew","pivot","shadow","anchor","rotation","__shouldUpdate","alpha","shouldUpdate","_shouldUpdate","_dirty","dirty","value","_position","copyFrom","_scale","set","_skew","_alpha","_onUpdate","_rotation","_anchor","_pivot","_shadow","createProxy","_point","_app","_visible","_shouldUpdateBounds","shouldUpdateBounds","_baseRender","ctx","blur","color","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","render","updateTransformBounds","globalAlpha","dpr","scaleX","scaleY","skewX","skewY","positionX","positionY","pivotX","pivotY","cos","Math","sin","anchorX","ensureBetween","anchorY","originX","transformWidth","originY","transformHeight","dx","dy","setTransform","clone","_render","resetTransform","_renderId","onAdd","onRemove","destroy","removeAllListeners"],"mappings":"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"}